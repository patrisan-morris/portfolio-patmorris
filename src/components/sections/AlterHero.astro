---
import RightArrow from '@components/icons/RightArrow.astro';
const {t} = Astro.props;

const ALTERHEROS = [
	{ hero: 'dev', title: t.dev_title, description: t.dev_description, image: '/pma-dev.png', bg: 'bg-pma-dev'},
	{ hero: 'dancer', title: t.dancer_title, description: t.dancer_description, image: '/pma-dancer.png', bg: 'bg-pma-dancer'},
	{ hero: 'gamer', title: t.gamer_title, description: t.gamer_description, image: '/pma-gamer.png', bg: 'bg-pma-gamer'},
	{ hero: 'traveler', title: t.traveler_title, description: t.traveler_description, image: '/pma-traveler.png', bg: 'bg-pma-traveler'}
];


---

<section id="alterhero" class="min-h-6xl">
	
	{ALTERHEROS.map((alterhero, index) => (
		<div class={alterhero.bg +" min-h-6xl dark:bg-gray-800 bg-white/95 bg-blend-overlay dark:bg-blend-multiply bg-cover bg-no-repeat bg-left-bottom"}>
			<div id={'hero_' + index} class="hero_section max-w-7xl mx-auto justify-center items-center hidden">		
				<div class="flex justify-between items-center my-56 w-full gap-16">	
					<div class="flex flex-col justify-start items-start cursor-default max-w-2/3 gap-3">
						<div class="flex flex-col justify-center items-end">
							<h1 id="name" class="text-6xl font-bold border-b-4 border-gray-600 dark:border-white py-2">{t.name}</h1>
							<h2 class="text-2xl uppercase font-bold py-2 tracking-widest bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">{alterhero.title}</h2>
						</div>				
						<p class="text-md text-gray-500 font-light tracking-wide">{alterhero.description}</p>
					</div>
					<img src={alterhero.image} alt={alterhero.title} class="w-1/3 rounded-full border-4 border-primary hover:border-accent hover:scale-105 shadow-gray-400 dark:shadow-gray-900 shadow-xl"/>
				</div>		
			</div>
		</div>
	))}
	<div class="absolute bottom-32 z-10 w-full">
		<div class="max-w-7xl mx-auto flex justify-center items-center">
			<button class="flex items-center justify-center border-[2px] border-primary rounded-full cursor-default p-1"> 
				<RightArrow id="alter-left" class="hidden fill-gray-800 rotate-90 hover:bg-accent rounded-full cursor-pointer"/>
				<span id="alter" class="font-semibold px-2">{t.alter_hero}</span>
				<RightArrow id="alter-right" class="fill-gray-800 -rotate-90 hover:bg-accent rounded-full cursor-pointer"/>
			</button>
		</div>
	</div>
</section>

<script>
	let currentindex = 0;
	const maxindex = document.getElementsByClassName("hero_section").length - 1;
	const alterLeft = document.getElementById('alter-left');
	const alterRight = document.getElementById('alter-right');
	
	function change(index) {
		const currentHero = document.getElementById('hero_' + index);
		const elements = document.getElementsByClassName("hero_section");
		Array.prototype.forEach.call(elements, function(element){			
			element.classList.add('hidden');
			element.classList.remove('flex');
		});

		if(currentHero) {
			currentHero.classList.remove('hidden');
			currentHero.classList.add('flex');
		}
		currentindex = index;
		if(currentindex === 0){
			alterLeft.classList.add('hidden');
			alterRight.classList.remove('hidden');
		}else if(currentindex === maxindex){		
			alterLeft.classList.remove('hidden');
			alterRight.classList.add('hidden');
		}else{
			alterLeft.classList.remove('hidden');
			alterRight.classList.remove('hidden');
		}
	} 

	change(currentindex);

	alterLeft.addEventListener('click', (e) => {
		if(currentindex !== 0) {
			change(currentindex - 1);
		}else{
			change(maxindex);
		}
	});

	alterRight.addEventListener('click', (e) => {
		if(currentindex !== maxindex) {
			change(currentindex + 1);
		}else{
			change(0);
		}
	});
	
</script>
