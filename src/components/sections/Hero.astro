---
import HeartIcon from '@components/icons/Heart.astro';
import SendIcon from '@components/icons/Send.astro';
import SkillItem from '@components/elements/SkillItem.astro';

const {t} = Astro.props;

const ALTERHEROS = [
	{hero: 'dev', title: t.globals.devTitle, subtitle: t.globals.devSubtitle , description: t.globals.devDescription, image: '/pma-dev.png', bg: 'bg-pma-dev', likes: "1500"},
	{hero: 'dancer', title: t.globals.dancerTitle, subtitle: t.globals.dancerSubtitle , description: t.globals.dancerDescription, image: '/pma-dancer.png', bg: 'bg-pma-dancer', likes: "1260"},
	{hero: 'gamer', title: t.globals.gamerTitle, subtitle: t.globals.gamerSubtitle , description: t.globals.gamerDescription, image: '/pma-gamer.png', bg: 'bg-pma-gamer', likes: "1340"},
	{hero: 'traveler', title: t.globals.travelerTitle, subtitle: t.globals.travelerSubtitle , description: t.globals.travelerDescription, image: '/pma-traveler.png', bg: 'bg-pma-traveler'},
	{hero: 'catlover', title: t.globals.catloverTitle, subtitle: t.globals.catloverSubtitle , description: t.globals.catloverDescription, image: '/pma-catlover.png', bg: 'bg-pma-catlover'},
	{hero: 'reader', title: t.globals.readerTitle, subtitle: t.globals.readerSubtitle , description: t.globals.readerDescription, image: '/pma-reader.png', bg: 'bg-pma-reader', likes: "50"}
];
const SOCIALMEDIA = [
	{name:'linkedin', link: '#'},
	{name:'github', link:'#'},
	{name:'email', link:'#'},
	{name:'cv', link:'#'},
];
const currentHero = 0;
const backgrounds = "bg-pma-dev bg-pma-dancer bg-pma-gamer bg-pma-traveler bg-pma-catlover bg-pma-reader";

---

<section id="alterhero" class="relative -top-20 w-full" data-currenthero={ALTERHEROS[currentHero].hero}>
	<div id="background" class={backgrounds + " fondo min-h-6xl dark:bg-gray-800 bg-white/95 bg-blend-overlay dark:bg-blend-multiply bg-contain bg-repeat bg-center"}>
		<div class="hero-section max-w-7xl mx-auto pt-32 pb-20 flex flex-row justify-center items-center">				
			<div class="flex justify-between items-center gap-12 w-[85%]">	
				<div class="flex flex-col justify-start items-start cursor-default w-3/4 gap-3">
					<div class="flex flex-col justify-center items-end">
						<h1 id="name" class="text-6xl font-bold border-b-4 border-gray-600 dark:border-white py-2">{t.globals.name}</h1>
						{ALTERHEROS.map(alterhero => (	
							<h2 id={"title-" + alterhero.hero} class="text-2xl uppercase font-bold py-2 tracking-widest bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent hidden">
								{alterhero.title}
							</h2>						
						))}
					</div>	
					{ALTERHEROS.map(alterhero => (				
						<p id={"description-" + alterhero.hero} class="text-md text-gray-500 font-light tracking-wide leading-8 hidden">{alterhero.description}</p>
					))}
					<ul class="flex flex-row justify-between gap-4 w-[90%]">
						{SOCIALMEDIA.map(social => (
							<SkillItem skill={social.name} t={t} mode="horizontal"/>	
						))}
					</ul>
				</div>
				<div class="w-1/3 rotate-6 px-5 pt-5 pb-5 bg-white border-4 border-primary shadow-gray-400 dark:shadow-gray-900 shadow-xl z-50">
					{ALTERHEROS.map(alterhero => (
						<img id={"image-" + alterhero.hero} src={alterhero.image} alt={alterhero.title} class="w-full mb-2 hidden"/>
					))}
					<footer class="flex flex-col justify-center items-center">
						<ul class="flex flex-row justify-center items-center w-full gap-3 list-disc cursor-pointer">
							{ALTERHEROS.map(alterelem => (
								<li data-hero={alterelem.hero} class="text-gray-200 hover:text-primary"></li>
							))}
						</ul>
						<div class="flex flex-row w-full justify-between">
							<div class="flex flex-row justify-center items-center gap-2">
								<HeartIcon class="size-6 cursor-pointer hover:fill-primary"/>									
								{ALTERHEROS.map(alterhero => (
									<span id={"footer-likes-" + alterhero.hero} class="hidden">{alterhero.likes}</span> 
								))}
								<span>{t.globals.likes}</span>
							</div>
							<div>
								<SendIcon class="fill-white stroke-gray-800 size-6 cursor-pointer hover:stroke-primary"/>
							</div>
						</div>
						<div class="flex flex-row w-full justify-start">
							{ALTERHEROS.map(alterhero => (
								<span id={"footer-title-" + alterhero.hero} class="footer-title text-gray-400 pt-2 tracking-wide hidden">{alterhero.title}</span>
							))}
						</div>
					</footer>
				</div>
			</div>	
			<ul id="list-buttons" class="flex flex-col justify-center items-start w-[15%] pt-10">
				{ALTERHEROS.map((alterelem, index) => (                                
					<li data-hero={alterelem.hero} class={"w-[50%] button-alter cursor-pointer transition ease-in-out duration-300"}>
						<img src={alterelem.image} alt={alterelem.title} class="img-hero rounded-full transition hover:scale-125"/>
					</li>
				))}
			</ul>
		</div>
	</div>
</section>

<style is:inline>
	.fondo{
    	mask-image: linear-gradient(#fff 90%, transparent);
	}
	.img-hero{
		mask-image: radial-gradient(circle at center in hsl shorter hue, #FFF 40%, #FFFFFF33 55%, transparent 60%);
	}
	.button-alter:nth-child(1){
		transform: translate(-5em, 5em);
	}	
	.button-alter:nth-child(2){
		transform: translate(1.5em, -1.5em);
	}
	.button-alter:nth-child(3){
		transform: translate(6em, -2em);
	}
	.button-alter:nth-child(4){
		transform: translate(7em, -1.5em);
	}
	.button-alter:nth-child(5){
		transform: translate(5em, -1.5em);
	}
	.button-alter:nth-child(6){
        animation:append-child-last 100ms linear both;
    }

    @keyframes append-child-last {
        0% {
            transform: translate(-2.5em, -4em);
        }
        100% {
			transform: translate(-0.5em, -4em);
        }
    }

</style>

<script is:inline>
	const currentHero = document.getElementById('alterhero');
	const buttonsAlter = document.getElementsByClassName("button-alter"); 
	const listButtons = document.getElementById("list-buttons");	
    let positions = [ "dev","dancer","gamer","traveler", "catlover", "reader"];

	function changeHero(hero, isHidden) {
		const bg = document.getElementById('background').classList;
		bg.remove("bg-pma-dev","bg-pma-dancer", "bg-pma-gamer", "bg-pma-traveler", "bg-pma-catlover", "bg-pma-reader");
		bg.add("bg-pma-" + hero);
		const title = document.getElementById('title-' + hero).classList[!isHidden ? 'remove': 'add']('hidden');
		const description = document.getElementById('description-' + hero).classList[!isHidden ? 'remove': 'add']('hidden');
		const image = document.getElementById('image-' + hero).classList[!isHidden ? 'remove': 'add']('hidden');
        const footerTitle = document.getElementById('footer-title-' + hero).classList[!isHidden ? 'remove': 'add']('hidden');
		const footerLikes = document.getElementById('footer-likes-' + hero).classList[!isHidden ? 'remove': 'add']('hidden');

		if(hero !== currentHero.dataset.currenthero){
			currentHero.dataset.currenthero = hero;
		}
	} 

	function changePositions(hero){
		const indexHero = positions.indexOf(hero);
		const indexCurrent = positions.indexOf(currentHero.dataset.currenthero);
		const isRight = (indexHero - indexCurrent < 0)? false:true;
		if(isRight){
			const elem = buttonsAlter[0];
			listButtons.appendChild(elem);
		}
	}

	function eventButtons(){
        Array.prototype.forEach.call(buttonsAlter, (button, index) => {            
            button.addEventListener('click', (e) => {
				changePositions(button.dataset.hero);
				changeHero(currentHero.dataset.currenthero, true);
                changeHero(button.dataset.hero, false);
            });
        });
    }

	changeHero('dev');
	eventButtons();

	
</script>
